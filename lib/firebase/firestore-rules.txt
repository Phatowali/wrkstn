rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(resource) {
      return resource.data.createdBy == request.auth.uid;
    }
    
    function isTeamMember(resource) {
      return request.auth.uid in resource.data.members;
    }
    
    // Companies collection
    match /companies/{companyId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn();
      allow update, delete: if isSignedIn() && (
        resource.data.createdBy == request.auth.uid ||
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'
      );

      // Leads subcollection
      match /leads/{leadId} {
        allow read: if isSignedIn();
        allow create: if isSignedIn();
        allow update, delete: if isSignedIn() && (
          resource.data.createdBy == request.auth.uid ||
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'
        );
      }
    }

    // Legacy leads collection - keep for backward compatibility
    match /leads/{leadId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn();
      allow update, delete: if isSignedIn() && (
        resource.data.createdBy == request.auth.uid ||
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'
      );
    }
    
    // Tasks collection
    match /tasks/{taskId} {
      allow read: if isSignedIn() && (isOwner(resource) || isTeamMember(resource));
      allow create: if isSignedIn();
      allow update, delete: if isSignedIn() && (isOwner(resource) || isTeamMember(resource));
    }
    
    // Projects collection
    match /projects/{projectId} {
      allow read: if isSignedIn() && (isOwner(resource) || isTeamMember(resource));
      allow create: if isSignedIn();
      allow update, delete: if isSignedIn() && isOwner(resource);
    }
    
    // User profiles collection
    match /users/{userId} {
      allow read: if isSignedIn();
      allow create, update: if isSignedIn() && request.auth.uid == userId;
      allow delete: if false; // Prevent user profile deletion
    }
    
    // Team collection
    match /teams/{teamId} {
      allow read: if isSignedIn() && (isOwner(resource) || isTeamMember(resource));
      allow create: if isSignedIn();
      allow update: if isSignedIn() && isOwner(resource);
      allow delete: if isSignedIn() && isOwner(resource);
    }
  }
}